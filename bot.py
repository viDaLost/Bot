import os
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext
from telegram import Update

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
ADMIN_CHAT_ID = '–í–ê–®_CHAT_ID'  # ‚Üê –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π Chat ID (—á–µ—Ä–µ–∑ @userinfobot)
BOT_TOKEN = os.getenv("TELEGRAM_TOKEN")  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ chat_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
user_chats = {}  # {admin_reply_chat_id: user_chat_id}

# –ö–æ–º–∞–Ω–¥–∞ /start
def start(update: Update, context: CallbackContext):
    user = update.effective_user
    update.message.reply_text(f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}!\n\n–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ –∏–ª–∏ –≥–æ–ª–æ—Å–æ–≤–æ–µ), –∏ —è –ø–µ—Ä–µ–¥–∞–º –µ–≥–æ –≤–ª–∞–¥–µ–ª—å—Ü—É –±–æ—Ç–∞.")

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def handle_message(update: Update, context: CallbackContext):
    user = update.effective_user
    message = update.message

    if str(user.id) == ADMIN_CHAT_ID:
        # –ï—Å–ª–∏ —ç—Ç–æ –∞–¥–º–∏–Ω ‚Äî —Å–º–æ—Ç—Ä–∏–º, –Ω–∞ –∫–∞–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–Ω –æ—Ç–≤–µ—á–∞–µ—Ç
        if message.reply_to_message and message.reply_to_message.forward_from:
            original_user_id = message.reply_to_message.forward_from.id

            try:
                if message.text:
                    context.bot.send_message(
                        chat_id=original_user_id,
                        text=f"üì® –û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n\n{message.text}"
                    )
                elif message.photo:
                    photo_file = message.photo[-1].get_file()
                    context.bot.send_photo(
                        chat_id=original_user_id,
                        photo=photo_file.file_id,
                        caption=message.caption or "üñºÔ∏è –§–æ—Ç–æ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
                    )
                elif message.voice:
                    voice_file = message.voice.get_file()
                    context.bot.send_voice(
                        chat_id=original_user_id,
                        voice=voice_file.file_id,
                        caption="üé§ –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
                    )
                else:
                    message.forward(chat_id=original_user_id)

                update.message.reply_text("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é!")
            except Exception as e:
                update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")
        return

    # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    if message.text:
        forwarded = message.forward(chat_id=ADMIN_CHAT_ID)
        if forwarded:
            user_chats[forwarded.message_id] = user.id
            context.bot.send_message(
                chat_id=ADMIN_CHAT_ID,
                text=f"üí¨ –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user.first_name} (@{user.username} | ID: {user.id})"
            )

    elif message.photo:
        photo = message.photo[-1]
        caption = message.caption or "üñºÔ∏è –§–æ—Ç–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
        forwarded = context.bot.send_photo(
            chat_id=ADMIN_CHAT_ID,
            photo=photo.file_id,
            caption=f"{caption}\n\nüì∏ –û—Ç: {user.first_name} (@{user.username} | ID: {user.id})"
        )
        if forwarded:
            user_chats[forwarded.message_id] = user.id

    elif message.voice:
        forwarded = context.bot.send_voice(
            chat_id=ADMIN_CHAT_ID,
            voice=message.voice.file_id,
            caption=f"üé§ –ì–æ–ª–æ—Å–æ–≤–æ–µ –æ—Ç: {user.first_name} (@{user.username} | ID: {user.id})"
        )
        if forwarded:
            user_chats[forwarded.message_id] = user.id

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    updater = Updater(BOT_TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, handle_message))
    dp.add_handler(MessageHandler(Filters.photo, handle_message))
    dp.add_handler(MessageHandler(Filters.voice, handle_message))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
